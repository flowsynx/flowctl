//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowCtl {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FlowCtl.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse the entered specifications. Please check it and try again!.
        /// </summary>
        internal static string AddConfigCommandCouldNotParseSpecifications {
            get {
                return ResourceManager.GetString("AddConfigCommandCouldNotParseSpecifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add configuration section.
        /// </summary>
        internal static string AddConfigCommandDescription {
            get {
                return ResourceManager.GetString("AddConfigCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unique configuration section name.
        /// </summary>
        internal static string AddConfigCommandNameOption {
            get {
                return ResourceManager.GetString("AddConfigCommandNameOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specifications regarding configuration section. They should be passed in pairs of key value.
        /// </summary>
        internal static string AddConfigCommandSpecificationOption {
            get {
                return ResourceManager.GetString("AddConfigCommandSpecificationOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of connector supported by FlowSynx.
        /// </summary>
        internal static string AddConfigCommandTypeOption {
            get {
                return ResourceManager.GetString("AddConfigCommandTypeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The address that specify a http-based address to connect on remote FlowSynx system.
        /// </summary>
        internal static string CommandAddressOption {
            get {
                return ResourceManager.GetString("CommandAddressOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore or apply case sensitive in filters.
        /// </summary>
        internal static string CommandCaseSensitiveOption {
            get {
                return ResourceManager.GetString("CommandCaseSensitiveOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the FlowSynx dashboard to install, for example: 0.1.0.
        /// </summary>
        internal static string CommandDashboardVersionOption {
            get {
                return ResourceManager.GetString("CommandDashboardVersionOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desplay desired fields related to the result objects.
        /// </summary>
        internal static string CommandFieldOption {
            get {
                return ResourceManager.GetString("CommandFieldOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expressions filter to filter data.
        /// </summary>
        internal static string CommandFilterOption {
            get {
                return ResourceManager.GetString("CommandFilterOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the FlowSynx system to install, for example: 0.1.0.
        /// </summary>
        internal static string CommandFlowSynxVersionOption {
            get {
                return ResourceManager.GetString("CommandFlowSynxVersionOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force terminate FlowSynx system and Dashboard if they are running.
        /// </summary>
        internal static string CommandForceOption {
            get {
                return ResourceManager.GetString("CommandForceOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full numbers instead of human-readable.
        /// </summary>
        internal static string CommandFullOption {
            get {
                return ResourceManager.GetString("CommandFullOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kind of entity. Valid values are File, Directory, and FileAndDirectory.
        /// </summary>
        internal static string CommandKindOption {
            get {
                return ResourceManager.GetString("CommandKindOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number or percentage of results to return [default: off].
        /// </summary>
        internal static string CommandLimitOption {
            get {
                return ResourceManager.GetString("CommandLimitOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting CLI output.
        /// </summary>
        internal static string CommandOutputOption {
            get {
                return ResourceManager.GetString("CommandOutputOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage path from which the about information is to be retrieved.
        /// </summary>
        internal static string CommandPathOption {
            get {
                return ResourceManager.GetString("CommandPathOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply recursion on filtering entities in the specified path.
        /// </summary>
        internal static string CommandRecurseOption {
            get {
                return ResourceManager.GetString("CommandRecurseOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting entities based on field name and ascending and descending. Like Property ASC, Property2 DESC [default: off].
        /// </summary>
        internal static string CommandSortOption {
            get {
                return ResourceManager.GetString("CommandSortOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage configurations related to FlowSynx System.
        /// </summary>
        internal static string ConfigCommandDescription {
            get {
                return ResourceManager.GetString("ConfigCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of configuration item.
        /// </summary>
        internal static string ConfigCommandTypeOption {
            get {
                return ResourceManager.GetString("ConfigCommandTypeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display details about a particular connector.
        /// </summary>
        internal static string ConnectorDetailsCommandDescription {
            get {
                return ResourceManager.GetString("ConnectorDetailsCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the connector.
        /// </summary>
        internal static string ConnectorDetailsCommandTypeOption {
            get {
                return ResourceManager.GetString("ConnectorDetailsCommandTypeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display list and details of connectors supported by FlowSynx system.
        /// </summary>
        internal static string ConnectorsCommandDescription {
            get {
                return ResourceManager.GetString("ConnectorsCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace of connector (e.g., Storage).
        /// </summary>
        internal static string ConnectorsCommandTypeOption {
            get {
                return ResourceManager.GetString("ConnectorsCommandTypeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run and execute the FlowSynx dashboard.
        /// </summary>
        internal static string DashboardCommandDescription {
            get {
                return ResourceManager.GetString("DashboardCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the version for FlowSynx dashboard.
        /// </summary>
        internal static string DashboardVersionCommandDescription {
            get {
                return ResourceManager.GetString("DashboardVersionCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete configuration section.
        /// </summary>
        internal static string DeleteConfigCommandDescription {
            get {
                return ResourceManager.GetString("DeleteConfigCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get details about configuration section.
        /// </summary>
        internal static string DetailsConfigCommandDescription {
            get {
                return ResourceManager.GetString("DetailsConfigCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration section name.
        /// </summary>
        internal static string DetailsConfigCommandNameOption {
            get {
                return ResourceManager.GetString("DetailsConfigCommandNameOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download failed with {0}.
        /// </summary>
        internal static string DownloadFailedWithStatus {
            get {
                return ResourceManager.GetString("DownloadFailedWithStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It seems there is an error occurred during processing the request..
        /// </summary>
        internal static string ErrorOccurredDuringProcessingRequest {
            get {
                return ResourceManager.GetString("ErrorOccurredDuringProcessingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlowSynx engine is downloaded and installed successfully in path &apos;{0}&apos;..
        /// </summary>
        internal static string FlowSynxEngineDownloadedAndInstalledSuccessfully {
            get {
                return ResourceManager.GetString("FlowSynxEngineDownloadedAndInstalledSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlowSynx engine is not installed. Please run the &apos;synx init -h&apos; command to see the details..
        /// </summary>
        internal static string FlowSynxEngineIsNotInstalled {
            get {
                return ResourceManager.GetString("FlowSynxEngineIsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base location not found.
        /// </summary>
        internal static string FlowSynxLocationBaseLocationNotFound {
            get {
                return ResourceManager.GetString("FlowSynxLocationBaseLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root location not found.
        /// </summary>
        internal static string FlowSynxLocationRootLocationNotFound {
            get {
                return ResourceManager.GetString("FlowSynxLocationRootLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the health status of FlowSynx System.
        /// </summary>
        internal static string HealthCommandDescription {
            get {
                return ResourceManager.GetString("HealthCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning Initialize....
        /// </summary>
        internal static string InitCommandBeginningInitialize {
            get {
                return ResourceManager.GetString("InitCommandBeginningInitialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install and initialize FlowSynx system and Dashboard on the current user profile.
        /// </summary>
        internal static string InitCommandDescription {
            get {
                return ResourceManager.GetString("InitCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file containing the JSON serialized data.
        /// </summary>
        internal static string InvokeCommandDataFileOption {
            get {
                return ResourceManager.GetString("InvokeCommandDataFileOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JSON serialized data string.
        /// </summary>
        internal static string InvokeCommandDataOption {
            get {
                return ResourceManager.GetString("InvokeCommandDataOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoke a method on FlowSynx system.
        /// </summary>
        internal static string InvokeCommandDescription {
            get {
                return ResourceManager.GetString("InvokeCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method to invoke.
        /// </summary>
        internal static string InvokeCommandMethodOption {
            get {
                return ResourceManager.GetString("InvokeCommandMethodOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP verb to use.
        /// </summary>
        internal static string InvokeCommandVerbOption {
            get {
                return ResourceManager.GetString("InvokeCommandVerbOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get FlowSynx System logs.
        /// </summary>
        internal static string LogsCommandDescription {
            get {
                return ResourceManager.GetString("LogsCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log verbosity to controls the amount of detail emitted for each event that is logged. Valid values are Dbug|Info|Warn|Fail|Crit [default: off].
        /// </summary>
        internal static string LogsCommandLogLevelOption {
            get {
                return ResourceManager.GetString("LogsCommandLogLevelOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; is already exist!.
        /// </summary>
        internal static string ReadCommandFileAlreadyExist {
            get {
                return ResourceManager.GetString("ReadCommandFileAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path where the streaming data are going to be saved.
        /// </summary>
        internal static string ReadCommandSaveToOption {
            get {
                return ResourceManager.GetString("ReadCommandSaveToOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to flowctl controls the FlowSynx engine.
        ///Find more information at: https://flowsynx.io/docs/getting-started/install-flowctl.
        /// </summary>
        internal static string RootCommandDescription {
            get {
                return ResourceManager.GetString("RootCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlowSynx configuration file.
        /// </summary>
        internal static string RunCommandConfigFileOption {
            get {
                return ResourceManager.GetString("RunCommandConfigFileOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run and execute the FlowSynx system on the current user profile.
        /// </summary>
        internal static string RunCommandDescription {
            get {
                return ResourceManager.GetString("RunCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable health checks for the FlowSynx.
        /// </summary>
        internal static string RunCommandEnableHealthCheckOption {
            get {
                return ResourceManager.GetString("RunCommandEnableHealthCheckOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable logging to records the details of events during FlowSynx running.
        /// </summary>
        internal static string RunCommandEnableLogOption {
            get {
                return ResourceManager.GetString("RunCommandEnableLogOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file path to store system logs information.
        /// </summary>
        internal static string RunCommandLogFileOption {
            get {
                return ResourceManager.GetString("RunCommandLogFileOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log verbosity to controls the amount of detail emitted for each event that is logged.
        /// </summary>
        internal static string RunCommandLogLevelOption {
            get {
                return ResourceManager.GetString("RunCommandLogLevelOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable OpenApi specification for FlowSynx.
        /// </summary>
        internal static string RunCommandOpenApiOption {
            get {
                return ResourceManager.GetString("RunCommandOpenApiOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something wrong happen during execute the application.
        /// </summary>
        internal static string SomethingWrongHappen {
            get {
                return ResourceManager.GetString("SomethingWrongHappen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching....
        /// </summary>
        internal static string SpinnerFetching {
            get {
                return ResourceManager.GetString("SpinnerFetching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting to change the execution mode of Dashboard..
        /// </summary>
        internal static string StartChangeDashboardExecutionMode {
            get {
                return ResourceManager.GetString("StartChangeDashboardExecutionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting to change the execution mode of FlowSynx..
        /// </summary>
        internal static string StartChangeFlowSynxExecutionMode {
            get {
                return ResourceManager.GetString("StartChangeFlowSynxExecutionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start download Cli binary.
        /// </summary>
        internal static string StartDownloadCliBinary {
            get {
                return ResourceManager.GetString("StartDownloadCliBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start download Dashboard binary.
        /// </summary>
        internal static string StartDownloadDashboardBinary {
            get {
                return ResourceManager.GetString("StartDownloadDashboardBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start download FlowSynx binary.
        /// </summary>
        internal static string StartDownloadFlowSynxBinary {
            get {
                return ResourceManager.GetString("StartDownloadFlowSynxBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting extract Dashboard binary.
        /// </summary>
        internal static string StartingExtractDashboardBinary {
            get {
                return ResourceManager.GetString("StartingExtractDashboardBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting extract FlowSynx binary.
        /// </summary>
        internal static string StartingExtractFlowSynxBinary {
            get {
                return ResourceManager.GetString("StartingExtractFlowSynxBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start validating Cli binary.
        /// </summary>
        internal static string StartValidatingCliBinary {
            get {
                return ResourceManager.GetString("StartValidatingCliBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start validating Dashboard binary.
        /// </summary>
        internal static string StartValidatingDashboardBinary {
            get {
                return ResourceManager.GetString("StartValidatingDashboardBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start validating FlowSynx binary.
        /// </summary>
        internal static string StartValidatingFlowSynxBinary {
            get {
                return ResourceManager.GetString("StartValidatingFlowSynxBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the FlowSynx system and its associated apps which running on the current user profile.
        /// </summary>
        internal static string StopCommandDescription {
            get {
                return ResourceManager.GetString("StopCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx system was stopped successfully..
        /// </summary>
        internal static string StopCommandFlowSynxStopped {
            get {
                return ResourceManager.GetString("StopCommandFlowSynxStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get about information from the storage.
        /// </summary>
        internal static string StorageAboutCommandDescription {
            get {
                return ResourceManager.GetString("StorageAboutCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table formatting doesn&apos;t support list of object. Please use other formats!.
        /// </summary>
        internal static string TableFormattingNotSupportList {
            get {
                return ResourceManager.GetString("TableFormattingNotSupportList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded data may has been corrupted!.
        /// </summary>
        internal static string TheDownloadedDataMayHasBeenCorrupted {
            get {
                return ResourceManager.GetString("TheDownloadedDataMayHasBeenCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx engine is already initialized..
        /// </summary>
        internal static string TheFlowSynxEngineIsAlreadyInitialized {
            get {
                return ResourceManager.GetString("TheFlowSynxEngineIsAlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning uninstalling....
        /// </summary>
        internal static string UninstallCommandBeginningUninstalling {
            get {
                return ResourceManager.GetString("UninstallCommandBeginningUninstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx dashboard is running. Please stop it and try uninstall again..
        /// </summary>
        internal static string UninstallCommandDashboardIsRunning {
            get {
                return ResourceManager.GetString("UninstallCommandDashboardIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx dashboard was stopped successfully..
        /// </summary>
        internal static string UninstallCommandDashboardStoppedSuccessfully {
            get {
                return ResourceManager.GetString("UninstallCommandDashboardStoppedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling FlowSynx system, Dashboard, and Cli from the current user profile and machine.
        /// </summary>
        internal static string UninstallCommandDescription {
            get {
                return ResourceManager.GetString("UninstallCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx engine is running. Please stop it by run the command: &apos;Synx stop&apos;, and try uninstall again..
        /// </summary>
        internal static string UninstallCommandFlowSynxIsRunning {
            get {
                return ResourceManager.GetString("UninstallCommandFlowSynxIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx system was stopped successfully..
        /// </summary>
        internal static string UninstallCommandFlowSynxStoppedSuccessfully {
            get {
                return ResourceManager.GetString("UninstallCommandFlowSynxStoppedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling is done!.
        /// </summary>
        internal static string UninstallCommandUninstallingIsDone {
            get {
                return ResourceManager.GetString("UninstallCommandUninstallingIsDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for CLI updates....
        /// </summary>
        internal static string UpdateCommandCheckingForCliUpdates {
            get {
                return ResourceManager.GetString("UpdateCommandCheckingForCliUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for Dashboard updates....
        /// </summary>
        internal static string UpdateCommandCheckingForDashboardUpdates {
            get {
                return ResourceManager.GetString("UpdateCommandCheckingForDashboardUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for FlowSynx updates....
        /// </summary>
        internal static string UpdateCommandCheckingForFlowSynxUpdates {
            get {
                return ResourceManager.GetString("UpdateCommandCheckingForFlowSynxUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current CLI version is up to dated.
        /// </summary>
        internal static string UpdateCommandCliIsUpdated {
            get {
                return ResourceManager.GetString("UpdateCommandCliIsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Dashboard is running. Please stop it before doing uninstall again..
        /// </summary>
        internal static string UpdateCommandDashboardIsRunning {
            get {
                return ResourceManager.GetString("UpdateCommandDashboardIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current Dashboard&apos;s version is up to dated.
        /// </summary>
        internal static string UpdateCommandDashboardIsUpdated {
            get {
                return ResourceManager.GetString("UpdateCommandDashboardIsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update FlowSynx system, Dashboard, and Cli.
        /// </summary>
        internal static string UpdateCommandDescription {
            get {
                return ResourceManager.GetString("UpdateCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx system is running. Please stop it before doing uninstall again..
        /// </summary>
        internal static string UpdateCommandFlowSynxIsRunning {
            get {
                return ResourceManager.GetString("UpdateCommandFlowSynxIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current FlowSynx&apos;s version is up to dated.
        /// </summary>
        internal static string UpdateCommandFlowSynxIsUpdated {
            get {
                return ResourceManager.GetString("UpdateCommandFlowSynxIsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FlowSynx system updated successfully..
        /// </summary>
        internal static string UpdateCommandFlowSynxUpdatedSuccessfully {
            get {
                return ResourceManager.GetString("UpdateCommandFlowSynxUpdatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use command &apos;Synx update&apos; to check and update the FlowSynx and Dashboard..
        /// </summary>
        internal static string UseUpdateCommandToUpdateFlowSynxAndDashboard {
            get {
                return ResourceManager.GetString("UseUpdateCommandToUpdateFlowSynxAndDashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating download - Fail!.
        /// </summary>
        internal static string ValidatingDownloadFail {
            get {
                return ResourceManager.GetString("ValidatingDownloadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the FlowSynx system and Cli version.
        /// </summary>
        internal static string VersionCommandDescription {
            get {
                return ResourceManager.GetString("VersionCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display full details about the running FlowSynx system.
        /// </summary>
        internal static string VersionCommandFullOption {
            get {
                return ResourceManager.GetString("VersionCommandFullOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not initialized.
        /// </summary>
        internal static string VersionCommandNotInitialized {
            get {
                return ResourceManager.GetString("VersionCommandNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version not found from url: {0}.
        /// </summary>
        internal static string VersionNotFoundFromUrl {
            get {
                return ResourceManager.GetString("VersionNotFoundFromUrl", resourceCulture);
            }
        }
    }
}
