<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationExtensions_AuthenticationIsRequired" xml:space="preserve">
    <value>Authentication required. Please log in first, then try again. Use login -h for more info.</value>
  </data>
  <data name="Commands_AddConfig_Data" xml:space="preserve">
    <value>A JSON-serialized data</value>
  </data>
  <data name="Commands_AddConfig_DataFile" xml:space="preserve">
    <value>A file containing JSON-serialized data</value>
  </data>
  <data name="Commands_AddConfig_DataFileDoesNotExist" xml:space="preserve">
    <value>The specified data file '{0}' does not exist.</value>
  </data>
  <data name="Commands_AddConfig_Description" xml:space="preserve">
    <value>Add plugin configuration</value>
  </data>
  <data name="Commands_Config_Description" xml:space="preserve">
    <value>Manage and display the list and details of plugin configuration</value>
  </data>
  <data name="Commands_DeleteConfig_Description" xml:space="preserve">
    <value>Delete plugin configuration</value>
  </data>
  <data name="Commands_DeleteConfig_IdentityOption" xml:space="preserve">
    <value>Plugin config identity</value>
  </data>
  <data name="Commands_DetailsConfig_Description" xml:space="preserve">
    <value>Get details about plugin configuration</value>
  </data>
  <data name="Commands_DetailsConfig_IdentityOption" xml:space="preserve">
    <value>Plugin config identity</value>
  </data>
  <data name="Commands_Error_DuringProcessingRequest" xml:space="preserve">
    <value>An error occurred during the processing of the request.</value>
  </data>
  <data name="Commands_FlowSynxAddress" xml:space="preserve">
    <value>The address that specifies the HTTP endpoint used to connect to the flowsynx system</value>
  </data>
  <data name="Commands_Health_Description" xml:space="preserve">
    <value>Display the health status of FlowSynx System</value>
  </data>
  <data name="Commands_Init_BeginningInitialize" xml:space="preserve">
    <value>Beginning Initialize...</value>
  </data>
  <data name="Commands_Init_Description" xml:space="preserve">
    <value>Installs and initializes the FlowSynx system for the current user profile.</value>
  </data>
  <data name="Commands_Init_DownloadedDataCorrupted" xml:space="preserve">
    <value>The downloaded data may has been corrupted!</value>
  </data>
  <data name="Commands_Init_FlowSynxSystemDownloadedAndInstalledSuccessfully" xml:space="preserve">
    <value>FlowSynx system is downloaded and installed successfully in path '{0}'.</value>
  </data>
  <data name="Commands_Init_FlowSynxSystemIsAlreadyInitialized" xml:space="preserve">
    <value>The FlowSynx system is already initialized.</value>
  </data>
  <data name="Commands_Init_FlowSynxVersionOption" xml:space="preserve">
    <value>The version of the FlowSynx system to install, for example: 1.0.0</value>
  </data>
  <data name="Commands_Init_StartChangeExecutionMode" xml:space="preserve">
    <value>Starting to change the execution mode of FlowSynx.</value>
  </data>
  <data name="Commands_Init_StartDownloadConsoleBinary" xml:space="preserve">
    <value>Start download FlowSynx Console binary</value>
  </data>
  <data name="Commands_Init_StartDownloadFlowSynxSystemBinary" xml:space="preserve">
    <value>Start download FlowSynx system binary</value>
  </data>
  <data name="Commands_Init_StartExtractingConsoleBinary" xml:space="preserve">
    <value>Starting extract FlowSynx Console binary</value>
  </data>
  <data name="Commands_Init_StartExtractingFlowSynxSystemBinary" xml:space="preserve">
    <value>Starting extract FlowSynx system binary</value>
  </data>
  <data name="Commands_Init_StartValidatingConsoleBinary" xml:space="preserve">
    <value>Start validating FlowSynx Console binary</value>
  </data>
  <data name="Commands_Init_StartValidatingFlowSynxSystemBinary" xml:space="preserve">
    <value>Start validating FlowSynx system binary</value>
  </data>
  <data name="Commands_Init_ValidatingConsoleFailed" xml:space="preserve">
    <value>Validating Console download - Fail!</value>
  </data>
  <data name="Commands_Init_ValidatingFlowSynxSystemFailed" xml:space="preserve">
    <value>Validating download - Fail!</value>
  </data>
  <data name="Commands_Login_BasicAuthenticationLoggedSuccessfully" xml:space="preserve">
    <value>Logged in with Basic Authentication successfully.</value>
  </data>
  <data name="Commands_Login_BasicAuthenticationOption" xml:space="preserve">
    <value>Login using basic authentication</value>
  </data>
  <data name="Commands_Login_BasicAuthenticationPasswordOption" xml:space="preserve">
    <value>Specifies the password for basic authentication</value>
  </data>
  <data name="Commands_Login_BasicAuthenticationUsernameOption" xml:space="preserve">
    <value>Specifies the username for basic authentication</value>
  </data>
  <data name="Commands_Login_BasicAuthentication_EnterUsernameAndPassword" xml:space="preserve">
    <value>Please enter Username and Password!</value>
  </data>
  <data name="Commands_Login_BearerAuthenticationEnterToken" xml:space="preserve">
    <value>Please enter token!</value>
  </data>
  <data name="Commands_Login_BearerAuthenticationLoggedSuccessfully" xml:space="preserve">
    <value>Logged in with Bearer Token successfully.</value>
  </data>
  <data name="Commands_Login_BearerAuthenticationOption" xml:space="preserve">
    <value>Login using bearer authentication</value>
  </data>
  <data name="Commands_Login_BearerAuthenticationTokenOption" xml:space="preserve">
    <value>Specifies the token for bearer authentication</value>
  </data>
  <data name="Commands_Login_Description" xml:space="preserve">
    <value>Authenticates the user and establishes a session with the FlowSynx system</value>
  </data>
  <data name="Commands_Login_SpecifyAuthenticationType" xml:space="preserve">
    <value>Please specify one of the authentication type: --basic, --bearer, or --oauth</value>
  </data>
  <data name="Commands_Logout_Description" xml:space="preserve">
    <value>Close authentication session with the FlowSynx system</value>
  </data>
  <data name="Commands_Logout_LogoutSuccessfully" xml:space="preserve">
    <value>Logout successfully.</value>
  </data>
  <data name="Commands_Logs_Description" xml:space="preserve">
    <value>Get FlowSynx System logs</value>
  </data>
  <data name="Commands_Logs_EndDateOption" xml:space="preserve">
    <value>Specifies the end date from which log entries should be retrieved.</value>
  </data>
  <data name="Commands_Logs_ExportToFileIsAlreadyExist" xml:space="preserve">
    <value>File '{0}' is already exist!</value>
  </data>
  <data name="Commands_Logs_ExportToOption" xml:space="preserve">
    <value>The path where the logs data are going to exported</value>
  </data>
  <data name="Commands_Logs_FromDateOption" xml:space="preserve">
    <value>Specifies the start date from which log entries should be retrieved.</value>
  </data>
  <data name="Commands_Logs_LogLevelOption" xml:space="preserve">
    <value>The log verbosity to controls the amount of detail emitted for each event that is logged. Valid values are Dbug|Info|Warn|Fail|Crit [default: off]</value>
  </data>
  <data name="Commands_Logs_MessageOption" xml:space="preserve">
    <value>Specifies the log message content to be searched</value>
  </data>
  <data name="Commands_Output_Format" xml:space="preserve">
    <value>Formatting Command-Line output</value>
  </data>
  <data name="Commands_Plugins_Description" xml:space="preserve">
    <value>Manage and display the list and details of plugins supported by the FlowSynx system.</value>
  </data>
  <data name="Commands_Plugins_DetailsDescription" xml:space="preserve">
    <value>Get details about plugin</value>
  </data>
  <data name="Commands_Plugins_DetailsIdentityOption" xml:space="preserve">
    <value>Plugin identity</value>
  </data>
  <data name="Commands_Plugins_InstallDescription" xml:space="preserve">
    <value>Install plugin</value>
  </data>
  <data name="Commands_Plugins_Install_TypeOption" xml:space="preserve">
    <value>Specifies the plugin type should be installed.</value>
  </data>
  <data name="Commands_Plugins_NewVersionOption" xml:space="preserve">
    <value>Specifies the new plugin version should be installed.</value>
  </data>
  <data name="Commands_Plugins_OldVersionOption" xml:space="preserve">
    <value>Specifies the old plugin version should be uninstalled.</value>
  </data>
  <data name="Commands_Plugins_UninstallDescription" xml:space="preserve">
    <value>Uninstall plugin</value>
  </data>
  <data name="Commands_Plugins_UnInstall_TypeOption" xml:space="preserve">
    <value>Specifies the plugin type should be Uninstalled.</value>
  </data>
  <data name="Commands_Plugins_UpdateDescription" xml:space="preserve">
    <value>Update plugin</value>
  </data>
  <data name="Commands_Plugins_VersionOption" xml:space="preserve">
    <value>Specifies the plugin version should be installed.</value>
  </data>
  <data name="Commands_RootDescription" xml:space="preserve">
    <value>flowctl controls the FlowSynx engine</value>
  </data>
  <data name="Commands_Run_Description" xml:space="preserve">
    <value>Run and execute the FlowSynx system under the current user profile</value>
  </data>
  <data name="Commands_Run_FlowSynxIsNotInstalled" xml:space="preserve">
    <value>The FlowSynx system is not installed. Please run the 'synx init -h' command for more details.</value>
  </data>
  <data name="Commands_StopConsole_Description" xml:space="preserve">
    <value>Stop the FlowSynx Console running under the current user profile.</value>
  </data>
  <data name="Commands_Stop_Description" xml:space="preserve">
    <value>Stop the FlowSynx system and its associated applications running under the current user profile.</value>
  </data>
  <data name="Commands_Stop_StopConsoleSuccessfully" xml:space="preserve">
    <value>The FlowSynx Console has been successfully stopped.</value>
  </data>
  <data name="Commands_Stop_StopFlowSynxSuccessfully" xml:space="preserve">
    <value>The FlowSynx system has been successfully stopped.</value>
  </data>
  <data name="Commands_Uninstall_BeginningUninstalling" xml:space="preserve">
    <value>Beginning uninstalling...</value>
  </data>
  <data name="Commands_Uninstall_ConsoleIsRunning" xml:space="preserve">
    <value>The FlowSynx Console is currently running. Please stop it before attempting to uninstall it.</value>
  </data>
  <data name="Commands_Uninstall_Description" xml:space="preserve">
    <value>Uninstalling the FlowSynx System from the current user's profile and local machine environment</value>
  </data>
  <data name="Commands_Uninstall_FlowSynxSystemIsRunning" xml:space="preserve">
    <value>The FlowSynx system is currently running. Please stop it before attempting to uninstall it.</value>
  </data>
  <data name="Commands_Uninstall_ForceTerminateOption" xml:space="preserve">
    <value>Forcefully terminates the FlowSynx system processes if it is currently running.</value>
  </data>
  <data name="Commands_Uninstall_StopSuccessfully" xml:space="preserve">
    <value>The FlowSynx system has been successfully stopped.</value>
  </data>
  <data name="Commands_Uninstall_UninstalledSuccessfully" xml:space="preserve">
    <value>The FlowSynx system has been uninstalled successfully.</value>
  </data>
  <data name="Commands_Update_CheckingForFlowSynxSystemUpdates" xml:space="preserve">
    <value>Checking for FlowSynx updates...</value>
  </data>
  <data name="Commands_Update_Description" xml:space="preserve">
    <value>Updates the FlowSynx system</value>
  </data>
  <data name="Commands_Update_DownloadedDataCorrupted" xml:space="preserve">
    <value>The downloaded data may has been corrupted!</value>
  </data>
  <data name="Commands_Update_FlowSynxSystemIsRunning" xml:space="preserve">
    <value>The FlowSynx system is currently running. Please stop it before attempting to update it.</value>
  </data>
  <data name="Commands_Update_FlowSynxSystemIsUpToDate" xml:space="preserve">
    <value>The current version of FlowSynx system is up to date</value>
  </data>
  <data name="Commands_Update_FlowSynxVersionOption" xml:space="preserve">
    <value>The version of the FlowSynx system to update, for example: 1.0.0</value>
  </data>
  <data name="Commands_Update_ForceTerminateOption" xml:space="preserve">
    <value>Forcefully terminates the FlowSynx system processes if it is currently running.</value>
  </data>
  <data name="Commands_Update_StartDownloadFlowSynxSystemBinary" xml:space="preserve">
    <value>Start download FlowSynx system binary</value>
  </data>
  <data name="Commands_Update_StartExtractingFlowSynxSystemBinary" xml:space="preserve">
    <value>Starting extract FlowSynx system binary</value>
  </data>
  <data name="Commands_Update_StartValidatingFlowSynxSystemBinary" xml:space="preserve">
    <value>Start validating FlowSynx system binary</value>
  </data>
  <data name="Commands_Update_ValidatingFlowSynxSystemFailed" xml:space="preserve">
    <value>Validating FlowSynx download - Fail!</value>
  </data>
  <data name="Commands_Version_Description" xml:space="preserve">
    <value>Displays the FlowSynx system version and CLI version.</value>
  </data>
  <data name="Commands_Version_NotInitialized" xml:space="preserve">
    <value>Not initialized</value>
  </data>
  <data name="Commands_Workflows_AddDescription" xml:space="preserve">
    <value>Add workflow</value>
  </data>
  <data name="Commands_Workflows_Add_DefinitionData" xml:space="preserve">
    <value>A JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_Add_DefinitionDataFile" xml:space="preserve">
    <value>A file containing JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_DeleteDescription" xml:space="preserve">
    <value>Delete workflow</value>
  </data>
  <data name="Commands_Workflows_DeleteIdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_Description" xml:space="preserve">
    <value>Manage and display the list and details of workflows.</value>
  </data>
  <data name="Commands_Workflows_DetailsDescription" xml:space="preserve">
    <value>Get details about workflow</value>
  </data>
  <data name="Commands_Workflows_DetailsIdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_ExecuteDescription" xml:space="preserve">
    <value>Execute workflow</value>
  </data>
  <data name="Commands_Workflows_ExecuteIdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_ExecutionsListDescription" xml:space="preserve">
    <value>Workflow executions list</value>
  </data>
  <data name="Commands_Workflows_Executions_IdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_Execution_ApprovalIdentityOption" xml:space="preserve">
    <value>Execution approval identity</value>
  </data>
  <data name="Commands_Workflows_Execution_IdentityOption" xml:space="preserve">
    <value>Execution identity</value>
  </data>
  <data name="Commands_Workflows_IdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_TriggersListDescription" xml:space="preserve">
    <value>Workflow triggers list</value>
  </data>
  <data name="Commands_Workflows_Triggers_AddDescription" xml:space="preserve">
    <value>Add trigger for a workflow</value>
  </data>
  <data name="Commands_Workflows_Triggers_Add_DefinitionData" xml:space="preserve">
    <value>A JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_Triggers_Add_DefinitionDataFile" xml:space="preserve">
    <value>A file containing JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_Triggers_DeleteDescription" xml:space="preserve">
    <value>Delete workflow trigger</value>
  </data>
  <data name="Commands_Workflows_Triggers_IdentityOption" xml:space="preserve">
    <value>Trigger identity</value>
  </data>
  <data name="Commands_Workflows_Triggers_Update_DefinitionData" xml:space="preserve">
    <value>A JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_Triggers_Update_DefinitionDataFile" xml:space="preserve">
    <value>A file containing JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_UpdateDescription" xml:space="preserve">
    <value>Update workflow</value>
  </data>
  <data name="Commands_Workflows_UpdateIdentityOption" xml:space="preserve">
    <value>Workflow identity</value>
  </data>
  <data name="Commands_Workflows_Update_DefinitionData" xml:space="preserve">
    <value>A JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflows_Update_DefinitionDataFile" xml:space="preserve">
    <value>A file containing JSON-serialized definition data</value>
  </data>
  <data name="Commands_Workflow_Execution_ApprovalsDescription" xml:space="preserve">
    <value>Get list of pending approvals about workflow execution</value>
  </data>
  <data name="Commands_Workflow_Execution_ApprovePendingTaskDescription" xml:space="preserve">
    <value>Approve the pending task in executed workflow</value>
  </data>
  <data name="Commands_Workflow_Execution_CancelDescription" xml:space="preserve">
    <value>Cancel the executed workflow</value>
  </data>
  <data name="Commands_Workflow_Execution_DetailsDescription" xml:space="preserve">
    <value>Get details about workflow execution</value>
  </data>
  <data name="Commands_Workflow_Execution_LogsDescription" xml:space="preserve">
    <value>Get logs about workflow execution</value>
  </data>
  <data name="Commands_Workflow_Execution_RejectPendingTaskDescription" xml:space="preserve">
    <value>Reject the pending task in executed workflow</value>
  </data>
  <data name="Commands_Workflow_Triggers_DetailsDescription" xml:space="preserve">
    <value>Get details about workflow trigger</value>
  </data>
  <data name="Command_ConsoleVersion_Description" xml:space="preserve">
    <value>Display the version for FlowSynx Console</value>
  </data>
  <data name="Command_Console_BackgroundOption" xml:space="preserve">
    <value>Run the console in the background</value>
  </data>
  <data name="Command_Console_ConsleIsNotInstalled" xml:space="preserve">
    <value>FlowSynx Console is not installed. Please run the 'synx init -h' command to see the details.</value>
  </data>
  <data name="Command_Console_Description" xml:space="preserve">
    <value>Run and execute the FlowSynx console</value>
  </data>
  <data name="Command_Run_BackgroundOption" xml:space="preserve">
    <value>Run the FlowSynx system in the background</value>
  </data>
  <data name="Command_Workflow_AddCommand_FileNotExist" xml:space="preserve">
    <value>The provided definition file '{0}' does not exist or could not be located.</value>
  </data>
  <data name="Command_Workflow_Triggers_AddCommand_FileNotExist" xml:space="preserve">
    <value>The provided data file '{0}' does not exist or could not be located.</value>
  </data>
  <data name="Command_Workflow_Triggers_UpdateCommand_FileNotExist" xml:space="preserve">
    <value>The provided data file '{0}' does not exist or could not be located.</value>
  </data>
  <data name="Command_Workflow_UpdateCommand_FileNotExist" xml:space="preserve">
    <value>The provided definition file '{0}' does not exist or could not be located.</value>
  </data>
  <data name="ConsoleLogger_DataConversionError" xml:space="preserve">
    <value>Data conversion encountered an error. The system couldn't process the data format.</value>
  </data>
  <data name="Error_During_Initializing_Application" xml:space="preserve">
    <value>Something wrong happen during execute the application</value>
  </data>
  <data name="LocationService_ErrorDuringGettingRootLocation" xml:space="preserve">
    <value>The base location could not be found.</value>
  </data>
</root>